


<div id="koserver" class="ui pointing secondary menu">
    <a class="active item" data-tab="first"><i class="fa fa-print"></i> &nbsp; CASUAL PAYSLIP </a>

</div>
<div class="ui bottom attached tab segment active" data-tab="first">

    <div class="ui small form">
        <br />
        <div class="four fields">
            <div class="three wide field">
                <label>&nbsp;</label>
                <div class="inline field">
                    <div class="ui act toggle checkbox">
                        @Html.CheckBox("IsActive", false, new { id = "chkActive", @class = "ui c checkbox" })
                        <label>CLIENTS</label>
                    </div>
                </div>
            </div>
            <div id="lookSearchClient" class="five wide field">
                <label>CLIENT</label>
                @Html.DropDownList("VClients", (IEnumerable<SelectListItem>)ViewBag.VClients, "--CLIENTS--", new
          {
              @class = "ui cv search dropdown"
          })

                @*<div id="lookupClient"></div>*@
            </div>
            <div id="lookSearchInvoice" class="eight wide field">
                <label>CLIENT INVOICES</label>
                @*<div id="lookupClientInvoice"></div>*@
                <div class="" id="gridBox"></div>
            </div>

        </div>

        <div class="four fields">
            <div class="three wide field">
                <label>&nbsp;</label>
                <div class="inline field">
                    <div class="ui date_ toggle checkbox">
                        @Html.CheckBox("IsDate", false, new { id = "chkDate", @class = "ui d checkbox" })
                        <label>DATE</label>
                    </div>
                </div>
            </div>
            <div id="dtFrom" class="three wide field">
                <label>FROM</label>
                @Html.TextBox("DateFrom")

            </div>
            <div id="dtTo" class="three wide field">
                <label>TO</label>

                @Html.TextBox("DateTo")

            </div>
            <div class="seven wide field">
                <label>&nbsp;</label>
            </div>


        </div>
    </div>
    <div class="field">
        <button id="btnPreview" data-bind="click:Preview" class="btn btn-primary">
            <i class="fa fa-print"></i> PREVIEW REPORT
        </button>
        &nbsp;
        <button id="btnCancel" class="btn btn-default">
            <i class="fa fa-remove"></i> CANCEL
        </button>
    </div>


</div>

<script>
    $(function () {
        $("#gridBox").dxDropDownBox();
        $('.ui.cv.dropdown').dropdown({
            transition: 'horizontal flip',
            direction: 'upward',
            fullTextSearch:false,
            onChange: function (value, text, $element) {

                loadclientInvoice(text);
            }
        })
        // var model = new processedCostSheet();
        closeClientFilters(false); closeDateFilters(false);
        //  ko.applyBindings(model, document.getElementById('koserver'));
        $('input[name="DateFrom"]').daterangepicker(
            {
                singleDatePicker: true,
                showDropdowns: true,
                startDate: new Date().getDate(),
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });

        $('input[name="DateTo"]').daterangepicker(
            {
                singleDatePicker: true,
                showDropdowns: true,
                startDate: new Date().getDate(),
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });

        $('#btnPreview').click(function () {
            var lookup = $(".ui.r.dropdown").dropdown('get value');
            var lookupclient = $(".ui.cv.dropdown").dropdown('get text');
            var invoice = $("#gridBox").dxDropDownBox('instance').option('value');

            var VM = {
                ReportOption: lookup,
                ClientId: 0,
                ClientName: lookupclient,
                FromDate: $('#DateFrom').val(),
                ToDate: $('#DateTo').val(),
                Status: '',
                Casual: '',
                RequestCode: '',
                Invoice: invoice,
                IsDateRangeActive: $('.ui.date_.checkbox').checkbox('is checked'),
            };

            var baseUrl = '/ReportManager/ReportPreview/';
            var queryString = $.param(VM);
            window.location = baseUrl + '?' + queryString;

        });

        $('#btnCancel').click(function () {
            $(".ui.r.dropdown").dropdown('restore default text');

            $('#frmFrame').empty();
            $('#frmFrame').transition('scale');
        });

        $('.ui.act.checkbox').checkbox({
            onChecked: function () {
                // model.ApplyFilter(true);
                closeClientFilters(true);
            },
            onUnchecked: function () {
                // model.ApplyFilter(false);
                closeClientFilters(false);
            }
        });
        //
        $('.ui.date_.checkbox').checkbox({
            onChecked: function () {
                // model.ApplyFilter(true);
                closeDateFilters(true);
            },
            onUnchecked: function () {
                // model.ApplyFilter(false);
                closeDateFilters(false);
            }
        });
    })

    function closeClientFilters(value) {
        if (value == false) {
            $('#lookSearchClient').fadeOut(200);
            $('#lookSearchInvoice').fadeOut(200);

            //  $('#dtTo').fadeOut(200);
            //  $('#dtFrom').fadeOut(200);
        }
        else {
            $('#lookSearchClient').fadeIn(200);
            $('#lookSearchInvoice').fadeIn(200);


            // $('#dtTo').fadeIn(200);
            // $('#dtFrom').fadeIn(200);
        }
    }

    function closeDateFilters(value) {
        if (value == false) {
            $('#dtTo').fadeOut(200);
            $('#dtFrom').fadeOut(200);
        }
        else {
            $('#dtTo').fadeIn(200);
            $('#dtFrom').fadeIn(200);
        }
    }


    var processedCostSheet = function () {
        var self = this;
        self.IsFilterSet = ko.observable(false);
        self.Preview = function () {

        }
    }
    
    function loadclientInvoice(client) {
        if (client == '') {
            $("#gridBox").dxDropDownBox();
            return;
        }
        $("#gridBox").dxDropDownBox('reset');
        var makeAsyncDataSource = function () {
            return new DevExpress.data.CustomStore({
                loadMode: "raw",
                key: "Invoice",
                load: function () {
                    var deferred = $.Deferred(),
                        args = {client};
                    $.ajax({
                        url: "/backoffice/getClientInvoices/?name="+client,
                        data: args,
                        success: function (result) {

                            deferred.resolve(result.data);
                        },
                        error: function () {
                            deferred.reject("Data Loading Error");
                        }
                        //,
                        //timeout: 5000
                    });

                    return deferred.promise();
                }
            });
        };

        var MAIN_DS_ = new DevExpress.data.DataSource({
            store:makeAsyncDataSource()
        });

        var dataGrid;

            $("#gridBox").dxDropDownBox({
                placeholder: "Select An Invoice",
                displayExpr: function (item) {
                    debugger;
                    return item.Invoice + '-' + item.Date;
                },
                onValueChanged: function (e) {
                    try {


                    } catch (e) {

                    }
                },
                showClearButton: true,
                dataSource: MAIN_DS_,
                contentTemplate: function (e) {
                    var value = e.component.option("value"),
                        $dataGrid = $("<div>").dxDataGrid({

                            dataSource: e.component.option("dataSource"),
                            columns: ["Date", "Invoice", "PreparedBy", "Status"],
                            hoverStateEnabled: true,
                            paging: { enabled: true, pageSize: 10 },
                            filterRow: { visible: true },
                            allowColumnResizing: true,
                            showColumnLines: false,
                            showRowLines: true,
                            rowAlternationEnabled: true,
                            showBorders: true,
                            columnAutoWidth: true,
                            scrolling: { mode: "infinite" },
                            height: 400,
                            selection: { mode: "single" },
                            selectedRowKeys: [value],
                            onSelectionChanged: function (selectedItems) {
                                var keys = selectedItems.selectedRowKeys,
                                    hasSelection = keys.length;

                                e.component.option("value", hasSelection ? keys[0] : null);
                            }
                        });

                    dataGrid = $dataGrid.dxDataGrid("instance");

                    e.component.on("valueChanged", function (args) {
                        dataGrid.selectRows(args.value, false);
                        $("#gridBox").dxDropDownBox('close');
                    });
                    return $dataGrid;
                }
            });
      }



</script>

